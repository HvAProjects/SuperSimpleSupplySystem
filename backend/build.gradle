plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id 'com.google.cloud.tools.jib' version '3.0.0'
	id 'de.fuerstenau.buildconfig' version '1.1.8'
	id 'idea'
	id "org.sonarqube" version "3.0"
}

group = 'nl.jed'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('testcontainersVersion', "1.15.1")
	ext.getGitHash = { ->
		def stdout = new ByteArrayOutputStream()
		exec {
			commandLine 'git', 'rev-parse', '--short', 'HEAD'
			standardOutput = stdout
		}
		return stdout.toString().trim()
	}
	ext.getTimestamp = { ->
		return new Date().format('yyyyMMddHHmmssSSS')
	}
}

buildConfig {
	buildConfigField "String", "GitHash", "${getGitHash()}"
}

sourceSets.main.java.srcDirs += "build/gen/buildconfig/src/main"

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-integration'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'org.springframework.security:spring-security-oauth2-client'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.springframework.integration:spring-integration-jpa'
	implementation 'org.springframework.integration:spring-integration-mail'
	implementation 'org.springframework.integration:spring-integration-security'
	implementation 'org.springframework.integration:spring-integration-webflux'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	implementation 'com.squareup.retrofit2:retrofit:2.4.0'
	implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testCompile 'org.junit.jupiter:junit-jupiter-params:5.7.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.integration:spring-integration-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mariadb'
	compileOnly 'javax.servlet:javax.servlet-api:3.1.0'
	implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'

//	swagger
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

	testCompile("io.github.bonigarcia:webdrivermanager:3.8.1")
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

jib {
	to {
		image = 'ghcr.io/hvaprojects/ssss_backend'
		auth {
			username = 'davidsoff'
			password = file('key').text
		}
		tags = ["main-${getGitHash()}-${getTimestamp()}"]
	}
	container {
		ports = ['8080']
		labels = ['org.opencontainers.image.source':'https://github.com/HvAProjects/SuperSimpleSupplySystem']
		format = 'OCI'
	}
}
